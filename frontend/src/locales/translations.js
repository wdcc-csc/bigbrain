const translations = {
    en: {
      
      appName: 'BigBrain',
      dashboard: 'Dashboard',
      logout: 'Logout',
      login: 'Login',
      register: 'Register',
      email: 'Email',
      password: 'Password',
      confirmPassword: 'Confirm Password',
      name: 'Name',
      submit: 'Submit',
      cancel: 'Cancel',
      save: 'Save',
      delete: 'Delete',
      edit: 'Edit',
      create: 'Create',
      close: 'Close',
      remove: 'Remove',
      optional: 'Optional',
      seconds: 'seconds',
      unknownError: 'Unknown error',
      back: 'Back',
      refresh: 'Refresh',
      
      
      myGames: 'My Games',
      createGame: 'Create Game',
      
      
      gameName: 'Game Name',
      gameDetails: 'Game Details',
      startGame: 'Start Game',
      endGame: 'End Game',
      addQuestion: 'Add Question',
      editQuestion: 'Edit Question',
      deleteQuestion: 'Delete Question',
      
      
      joinGame: 'Join Game',
      playerName: 'Player Name',
      sessionId: 'Session ID',
      playerLink: 'Player Link',
      
      
      switchToEnglish: 'Switch to English',
      switchToChinese: 'Switch to Chinese',
      language: 'Language',
  
      
      loggingIn: 'Logging in...',
      pleaseAllFields: 'Please fill in all fields',
      loginError: 'An error occurred during login',
      noAccount: "Don't have an account? Register now",
  
      
      registering: 'Registering...',
      passwordsNotMatch: 'Passwords do not match',
      registerError: 'An error occurred during registration',
      haveAccount: 'Already have an account? Login now',
  
      
      myGamesTitle: 'My Games',
      manageGamesSubtitle: 'Create, edit and manage your quiz games',
      createNewGame: 'Create New Game',
      newGame: 'New Game',
      enterGameName: 'Enter game name',
      uploadThumbnail: 'Game Thumbnail',
      pleaseUploadImage: 'Please upload an image file (JPEG, PNG, GIF, etc.)',
      imageSize: 'Image size should not exceed 2MB',
      gameCreated: 'Game created successfully',
      gameCreateError: 'Failed to create game',
      gameNameRequired: 'Game name is required',
      deleteGameConfirm: 'Are you sure you want to delete this game?',
      gameDeleted: 'Game deleted successfully',
      gameDeleteError: 'Failed to delete game',
      fetchGamesError: 'Failed to fetch games list',
      copyLink: 'Copy Link',
      linkCopied: 'Link copied to clipboard',
      gameSessionStarted: 'Game session started, ID: {0}',
      gameSessionStartedLog: 'Successfully started game session, Session ID: {0}',
      gameSessionStopped: 'Game session stopped',
      noQuestionsWarning: 'Game has no questions, please add questions first',
      enterSessionId: 'Enter session ID',
      sessionStarted: 'Session Started',
      sessionUrl: 'Session URL',
      questionCount: '{0} questions',
      activeSession: 'Active session',
      editGame: 'Edit Game',
      startSession: 'Start Game',
      stopSession: 'End Session',
      noGames: 'No games yet',
      createFirstGame: 'Click the button above to create your first quiz game',
      loading: 'Loading...',
      viewResults: 'Would you like to view results?',
      startingGame: 'Starting game session, Game ID: ',
      gameStartResponse: 'Game start response:',
      noValidSessionId: 'Failed to get valid session ID:',
      startGameSessionFailed: 'Failed to start game session: No session ID obtained',
      startGameSessionError: 'Failed to start game session',
      stopGameSessionError: 'Failed to stop game session',
      uploadImage: 'Upload Image',
      thumbnailPreview: 'Game thumbnail preview',
      supportedFormats: 'Supports JPEG, PNG formats, max 2MB',
      totalDuration: 'Total duration',
      enterGameDetails: 'Please enter a name for the new game and upload a thumbnail (optional)',
      playersWaiting: 'Players will be in the "waiting" state until you start the first question.',
      manageSession: 'Manage Session',
  
      
      gameEditor: 'Game Editor',
      questionsForGame: 'Questions for {0}',
      backToDashboard: 'Back to Dashboard',
      refreshGameData: 'Refresh Game Data',
      addNewQuestion: 'Add New Question',
      questionType: 'Question Type',
      singleChoice: 'Single Choice',
      multipleChoice: 'Multiple Choice',
      trueFalse: 'True/False',
      timeLimit: 'Time Limit',
      points: 'Points',
      correctAnswerCount: '{0} correct answer(s)',
      noQuestionsYet: 'No questions yet',
      addFirstQuestion: 'Add your first question to get started',
      fetchGameError: 'Failed to get game information',
      deleteQuestionConfirm: 'Are you sure you want to delete this question?',
      deleteQuestionSuccess: 'Question deleted successfully',
      deleteQuestionError: 'Failed to delete question',
      updatingQuestions: 'Updating questions...',
      updateQuestionsSuccess: 'Questions updated successfully',
      updateQuestionsError: 'Failed to update questions',
      refreshingData: 'Refreshing game data...',
      refreshSuccess: 'Game data refreshed successfully',
      refreshError: 'Failed to refresh game data',

    
      questionEditor: 'Question Editor',
      backToGame: 'Back to Game',
      questionContent: 'Question Content',
      enterQuestion: 'Enter your question here',
      questionTypeLabel: 'Question Type',
      timeLimitLabel: 'Time Limit (seconds)',
      pointsLabel: 'Points',
      answersLabel: 'Answers',
      answerPlaceholder: 'Answer {0}',
      markAsCorrect: 'Mark as correct',
      addAnswer: 'Add Answer',
      maxAnswersWarning: 'Each question can have up to 6 answers',
      minAnswersWarning: 'Each question must have at least 2 answers',
      saveQuestion: 'Save Question',
      savingQuestion: 'Saving question...',
      questionRequired: 'Question content is required',
      singleAnswerRequired: 'Single choice questions must have exactly one correct answer',
      multipleAnswerRequired: 'Multiple choice questions must have at least one correct answer',
      timeLimitRequired: 'Time limit must be greater than 0',
      pointsRequired: 'Points must be greater than 0',
      saveQuestionSuccess: 'Question saved successfully',
      saveQuestionError: 'Failed to save question',
      questionSaved: 'Question saved',
      videoUrl: 'Video URL (optional)',
      unknownGame: 'Unnamed Game',
      gameData: 'Game Data:',
      currentQuestions: 'Current Questions:',
      questionToSave: 'Question to Save:',
      updatedQuestions: 'Updated Questions:',
      usingSavingAPI: 'Using specialized API to save, question count:',
      apiResponse: 'API Response:',
      usingTraditionalMethod: 'Using traditional method to save',
      updatingGameData: 'Updating game data:',
      updatedGameData: 'Updated game data:',
      updatedQuestionsList: 'Updated questions list:',
      saveRetrying: 'Question may not be saved successfully, retrying...',
      finalSaveAttempt: 'Final attempt - using specialized API to save question',
      fetchingGameData: 'Fetching game data',
      tryingSpecializedAPI: 'Trying to use specialized API',
      specializedAPIResponse: 'Specialized API response:',
      specializedAPIFailed: 'Specialized API failed:',
      updatingStateWithResponseData: 'Updating state with response data',
      traditionalMethodResponse: 'Traditional method response:',
      unknownType: 'Unknown Type',
  
      
      sessionAdmin: 'Session Administration',
      sessionInfo: 'Session Information',
      gameSession: 'Game Session',
      sessionStatus: 'Session Status',
      activePlayers: 'Active Players',
      sessionClosed: 'Session Closed',
      backToGameEditor: 'Back to Game Editor',
      refreshSessionData: 'Refresh Session Data',
      advanceToNextQuestion: 'Next Question',
      endCurrentSession: 'End Session',
      playerResults: 'Player Results',
      player: 'Player',
      score: 'Score',
      correctAnswers: 'Correct Answers',
      rank: 'Rank',
      noPlayersJoined: 'No players have joined yet',
      waitingForPlayers: 'Waiting for players to join the game...',
      refreshingSession: 'Refreshing session data...',
      refreshSessionSuccess: 'Session data refreshed successfully',
      refreshSessionError: 'Failed to refresh session data',
      loadingSession: 'Loading session data...',
      fetchSessionError: 'Failed to load session data',
      advancingQuestion: 'Advancing to next question...',
      advanceQuestionSuccess: 'Advanced to next question successfully',
      advanceQuestionError: 'Failed to advance to next question',
      endingSession: 'Ending session...',
      endSessionSuccess: 'Session ended successfully',
      endSessionError: 'Failed to end session',
      correctnessRate: 'Correctness Rate by Question',
      averageResponseTime: 'Average Response Time by Question',
      question: 'Question',
      averageTime: 'Average Time (seconds)',
      correctRate: 'Correct Rate (%)',
      noResultData: 'No result data available yet',
      waitingText: 'Waiting for game to finish...',
      sessionStatusData: 'Session status raw data:',
      processedSessionData: 'Processed session data:',
      getGameIdFromStorage: 'Getting game ID from local storage:',
      serverReturnPlayerArray: 'Server returned player array format results',
      serverReturnPlayersObject: 'Server returned object with players property',
      unknownResultFormat: 'Unrecognized result format, trying to use directly',
      resultIsPlayerArray: 'Result is directly a player array',
      usingOtherResultFormat: 'Using other format of result data',
      noPlayersInResult: 'No players property in result, trying to build from session or empty array',
      playersNotArray: 'Players is not an array, converting to array',
      fillPlayersFromSession: 'Filling player information from session data',
      fillPlayersFromCurrentState: 'Filling player information from current state',
      unknownPlayer: 'Unknown Player',
      sessionResultAnalysis: 'Session Result Analysis',
      playerCount: 'Player count',
      playerExample: 'Player example',
      foundPlayerWithAnswers: 'Found player with answers',
      answerExample: 'Answer example',
      playerScoreInfo: 'Player {0} score: {1}, has {2} answers',
      noPlayerAnswersFound: 'No player answers found',
      missingQuestionData: 'Missing question data in results, trying to build from game info or session',
      buildQuestionsFromGameInfo: 'Building questions from game info',
      gameHas: 'game has',
      questions: 'questions',
      buildQuestionsFromSession: 'Building questions from session data',
      sessionHas: 'session has',
      cannotGetQuestionData: 'Cannot get question data, creating empty array',
      calculateStatsFromAnswers: 'Trying to calculate statistics from player answers...',
      playerAnswerTime: 'Player {0} question {1} answer time: {2} seconds',
      questionStats: 'Question {0} stats: correct rate={1}%, avg time={2}sec, answers={3}',
      fetchResultsError: 'Failed to fetch session results',
      gameInfoReceived: 'Game information received:',
      foundGameIdInStorage: 'Found session game ID in local storage:',
      foundGameViaAPI: 'Found game associated with session via API:',
      fetchFullSessionError: 'Failed to get full session information',
      currentSessionData: 'Current session data:',
      noGameIdInSession: 'No gameId in session:',
      receivedFullSessionInfo: 'Received full session info:',
      cannotGetGameId: 'Cannot get game ID',
      advancingWithGameId: 'Advancing game with retrieved gameId:',
      advancingGame: 'Advancing game, using gameId:',
      preparingCorrectRateChart: 'Preparing correct rate chart data:',
      createQuestionsForChart: 'Creating questions list for chart from game data:',
      calculateCorrectRateFromPlayers: 'Calculating question correct rates from players:',
      questionCorrectRate: 'Question {0} correct rate: {1}%',
      cannotGenerateCorrectRateChart: 'Cannot generate correct rate chart - no question data',
      correctRateChartData: 'Correct rate chart data:',
      preparingAverageTimeChart: 'Preparing average time chart data:',
      createQuestionsForTimeChart: 'Creating questions for average time chart:',
      calculateAvgTimeFromPlayers: 'Calculating average times from players:',
      questionAvgTime: 'Question {0} average time: {1} seconds',
      cannotGenerateTimeChart: 'Cannot generate time chart - no question data',
      avgTimeChartData: 'Average time chart data:',
      sessionNotFound: 'Session not found',
      lastUpdated: 'Last updated',
      currentPosition: 'Current position',
      preparing: 'Preparing',
      questionNumber: 'Question {0}',
      totalQuestions: 'Total questions',
      active: 'Active',
      startFirstQuestion: 'Start First Question',
      waiting: 'Waiting',
      inGame: 'In Game',
      shareSessionId: 'Please share session ID',
      gameResults: 'Game Results',
      scoreLeaderboard: 'Score Leaderboard',
      playerNumber: 'Player {0}',
      waitingForGameToEnd: 'Game is not finished yet, player scores will be displayed after the game ends',
      noPlayersNoScore: 'No players joined, cannot display score rankings',
      tryExtractRateFromLogs: 'Trying to extract correct rates from logs',
      extractedRatesFromLogs: 'Extracted correct rates from logs:',
      forcingRates: 'Forcing correct rates:',
      creatingRateChart: 'Creating correct rate chart with actual data:',
      rateDetailData: 'Correct rate detail data:',
      noResultDataYet: 'No result data yet, will display after game ends',
      noQuestionsNoChart: 'Game has no questions, cannot display chart',
      usingPlayerAnswersForRate: 'Using single player answers for correct rate:',
      questionRateCalculation: 'Question {0} rate calculation: correct={1}, total={2}',
      tryExtractTimeFromLogs: 'Trying to extract average times from logs',
      extractedTimesFromLogs: 'Extracted average times from logs:',
      forcingTimes: 'Forcing average times:',
      creatingTimeChart: 'Creating average time chart with actual data:',
      timeDetailData: 'Average time detail data:',
      usingSinglePlayerTime: 'Using single player answer times:',
      questionTimeCalculation: 'Question {0} time calculation: total time={1}, valid answers={2}, average={3}sec',
      trueFalseFixedAnswers: 'True/False questions have fixed two answers',
      true: 'True',
      false: 'False',

    
      playerGameResults: '{0}\'s Game Results',
      totalScore: 'Total Score',
      correctRate: 'Correct Rate',
      answeredQuestions: 'Answered Questions',
      questionAnswerDetails: 'Question Answer Details',
      questionNumber: 'Question {0}',
      points: 'Points',
      score: 'points',
      answerTime: 'Answer Time',
      correctAnswer: 'Correct Answer',
      wrongAnswer: 'Wrong Answer',
      resultNotFound: 'Results Not Found',
      backToGame: 'Back to Game',
      restartGame: 'Restart Game',
      noAnswerRecord: 'No Answer Records',
      noRecordReason: 'System could not retrieve your answer records. This may be because:',
      noQuestionAnswered: 'You have not answered any questions',
      sessionEndedDataProcessing: 'The session has been ended by admin but data is still processing',
      networkConnectionIssue: 'Network connection issues prevented data retrieval',
      unknownPlayer: 'Unknown Player',
  
      
      enterSessionId: 'Please enter session ID',
      enterPlayerName: 'Please enter your name',
      joinGameFailed: 'Failed to join game',
      sessionStartedOrNotExist: 'Session has already started or does not exist',
      joiningGame: 'Joining game...',
      joinGameDescription: 'Enter session ID and your name to join BigBrain game',
  
      
      yes: 'Yes',
      no: 'No',
      ok: 'OK',
      loading: 'Loading...',
      success: 'Success',
      failed: 'Failed',
      error: 'Error',
      unknown: 'Unknown',
      sessionEnded: 'Session Ended',
      viewResultsQuestion: 'Would you like to view the results?',
    }
  };
  
  // Simplified translation function that always returns English
  export const t = (key) => {
    if (!translations['en'] || !translations['en'][key]) {
      return key; // Return the key itself if translation not found
    }
    return translations['en'][key];
  };
  
  export default translations; 
  
  
  